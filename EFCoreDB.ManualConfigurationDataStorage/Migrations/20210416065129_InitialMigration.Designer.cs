// <auto-generated />
using EFCoreDB.ManualConfigurationDataStorage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreDB.ManualConfigurationDataStorage.Migrations
{
    [DbContext(typeof(EFCoreDBDataContextFA))]
    [Migration("20210416065129_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.AddressFA", b =>
                {
                    b.Property<int>("AddressFAPrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BloggerFAForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressFAPrimaryKey");

                    b.HasIndex("BloggerFAForeignKey")
                        .IsUnique();

                    b.ToTable("AddressFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.BlogFA", b =>
                {
                    b.Property<int>("BlogFAPrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessFAForeignKey")
                        .HasColumnType("int");

                    b.HasKey("BlogFAPrimaryKey");

                    b.HasIndex("ProcessFAForeignKey")
                        .IsUnique();

                    b.ToTable("BlogFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.BloggerFA", b =>
                {
                    b.Property<int>("BloggerFAPrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogFAForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BloggerFAPrimaryKey");

                    b.HasIndex("BlogFAForeignKey")
                        .IsUnique();

                    b.ToTable("BloggerFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.GroupFA", b =>
                {
                    b.Property<int>("GroupFAPrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessFAForeignKey")
                        .HasColumnType("int");

                    b.HasKey("GroupFAPrimaryKey");

                    b.HasIndex("ProcessFAForeignKey");

                    b.ToTable("GroupFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.PointFA", b =>
                {
                    b.Property<int>("PointFAPrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupFAForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PointFAPrimaryKey");

                    b.HasIndex("GroupFAForeignKey");

                    b.ToTable("PointFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.PostFA", b =>
                {
                    b.Property<int>("PostFAPrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogFAForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostFAPrimaryKey");

                    b.HasIndex("BlogFAForeignKey");

                    b.ToTable("PostFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.ProcessFA", b =>
                {
                    b.Property<int>("ProcessFAPrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProcessFAPrimaryKey");

                    b.ToTable("ProcessFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.TagFA", b =>
                {
                    b.Property<int>("TagFAPrimaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagFAPrimaryId");

                    b.ToTable("TagFA");
                });

            modelBuilder.Entity("PostFATagFA", b =>
                {
                    b.Property<int>("PostListPostFAPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("TagListTagFAPrimaryId")
                        .HasColumnType("int");

                    b.HasKey("PostListPostFAPrimaryKey", "TagListTagFAPrimaryId");

                    b.HasIndex("TagListTagFAPrimaryId");

                    b.ToTable("PostTags");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.AddressFA", b =>
                {
                    b.HasOne("EFCoreDB.Models.ManualConfiguration.BloggerFA", "BloggerFA")
                        .WithOne("AddressFA")
                        .HasForeignKey("EFCoreDB.Models.ManualConfiguration.AddressFA", "BloggerFAForeignKey")
                        .HasConstraintName("ForeignKey_AddressFA_BloggerFA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BloggerFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.BlogFA", b =>
                {
                    b.HasOne("EFCoreDB.Models.ManualConfiguration.ProcessFA", "ProcessFA")
                        .WithOne("BlogFA")
                        .HasForeignKey("EFCoreDB.Models.ManualConfiguration.BlogFA", "ProcessFAForeignKey")
                        .HasConstraintName("ForeignKey_BlogFA_ProcessFA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.BloggerFA", b =>
                {
                    b.HasOne("EFCoreDB.Models.ManualConfiguration.BlogFA", "BlogFA")
                        .WithOne("BloggerFA")
                        .HasForeignKey("EFCoreDB.Models.ManualConfiguration.BloggerFA", "BlogFAForeignKey")
                        .HasConstraintName("ForeignKey_BloggerFA_BlogFA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.GroupFA", b =>
                {
                    b.HasOne("EFCoreDB.Models.ManualConfiguration.ProcessFA", null)
                        .WithMany("GroupList")
                        .HasForeignKey("ProcessFAForeignKey")
                        .HasConstraintName("ForeignKey_GroupFA_ProcessFA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.PointFA", b =>
                {
                    b.HasOne("EFCoreDB.Models.ManualConfiguration.GroupFA", null)
                        .WithMany("PointList")
                        .HasForeignKey("GroupFAForeignKey")
                        .HasConstraintName("ForeignKey_PointFA_GroupFA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.PostFA", b =>
                {
                    b.HasOne("EFCoreDB.Models.ManualConfiguration.BlogFA", null)
                        .WithMany("PostList")
                        .HasForeignKey("BlogFAForeignKey")
                        .HasConstraintName("ForeignKey_PostFA_BlogFA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PostFATagFA", b =>
                {
                    b.HasOne("EFCoreDB.Models.ManualConfiguration.PostFA", null)
                        .WithMany()
                        .HasForeignKey("PostListPostFAPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreDB.Models.ManualConfiguration.TagFA", null)
                        .WithMany()
                        .HasForeignKey("TagListTagFAPrimaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.BlogFA", b =>
                {
                    b.Navigation("BloggerFA");

                    b.Navigation("PostList");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.BloggerFA", b =>
                {
                    b.Navigation("AddressFA");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.GroupFA", b =>
                {
                    b.Navigation("PointList");
                });

            modelBuilder.Entity("EFCoreDB.Models.ManualConfiguration.ProcessFA", b =>
                {
                    b.Navigation("BlogFA");

                    b.Navigation("GroupList");
                });
#pragma warning restore 612, 618
        }
    }
}
